version: "3"
services:
  db:
    env_file:
      - .env
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-U",
          "${POSTGRES_USER}",
          "-d",
          "${POSTGRES_DB}"
        ]
      interval: 2s
      timeout: 60s
      retries: 5
    networks:
      - my_network

  api:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_URL}/${POSTGRES_DB}
    entrypoint: [ "sh", "-c" ]
    command:
      - |
        rm -rf migrations
        echo migrations && alembic init migrations
        cp -f env.py migrations
        echo revision && alembic revision --autogenerate
        echo upgrade head && alembic upgrade head
        uvicorn main:app --host 0.0.0.0 --proxy-headers --reload
    networks:
      - my_network

  web:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    restart: always
    depends_on:
      - api
    ports:
      - 1234:80
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
